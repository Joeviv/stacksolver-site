---
// src/components/Navigation.astro
const navLinks = [
  { href: "/", text: "Inicio" },
  // { href: "/productos", text: "Productos" }, // ENLACE ELIMINADO
  { href: "/industrias", text: "Industrias" },
  { href: "/estrategia-digital", text: "Estrategia Digital" },
  { href: "/nosotros", text: "Nosotros" }
];
---

<nav class="main-navigation" aria-label="Navegación Principal">
  <ul id="navigation-menu-desktop" class="navigation-menu-desktop">
    {navLinks.map(link => (
      <li>
        <a href={link.href} class="nav-link-desktop">
          {link.text}
        </a>
      </li>
    ))}
  </ul>

  <button class="menu-toggle" aria-expanded="false" aria-controls="navigation-menu-mobile">
    <span class="sr-only">Abrir menú</span>
    <span class="hamburger-icon">
      <span class="line line1"></span>
      <span class="line line2"></span>
      <span class="line line3"></span>
    </span>
  </button>

  <ul id="navigation-menu-mobile" class="navigation-menu-mobile">
    {navLinks.map(link => (
      <li>
        <a href={link.href} class="nav-link-mobile">
          {link.text}
        </a>
      </li>
    ))}
  </ul>
</nav>

<style>
  /* ... (Todos tus estilos CSS permanecen exactamente iguales) ... */
  .main-navigation {
    display: flex;
    justify-content: flex-end;
    align-items: center;
  }

  .navigation-menu-desktop {
    display: flex; 
    list-style: none; padding: 0; margin: 0;
  }
  .navigation-menu-desktop li { margin-left: 1.8rem; }
  .navigation-menu-desktop li:first-child { margin-left: 0; }
  .nav-link-desktop { color: #e0e0e0; text-decoration: none; font-size: 1rem; padding: 0.5rem 0; transition: color 0.2s ease; }
  .nav-link-desktop:hover, .nav-link-desktop:focus { color: #ffffff; }

  .menu-toggle { display: none; background: none; border: none; color: white; cursor: pointer; padding: 0.5rem; z-index: 10001; position: relative;}

  .navigation-menu-mobile {
    display: flex; 
    flex-direction: column;
    align-items: center;
    list-style: none;
    padding: 0; 
    margin: 0;
    position: fixed; 
    top: 0;         
    left: 0;
    width: 100vw;   
    height: 100vh;  
    background-color: rgba(44, 62, 80, 0.98); 
    z-index: 10000; 
    opacity: 0;
    visibility: hidden;
    transform: translateX(100%); 
    transition: opacity 0.3s ease, visibility 0s linear 0.3s, transform 0.3s ease-in-out; 
  }

  .navigation-menu-mobile.is-open {
    opacity: 1;
    visibility: visible;
    transform: translateX(0%); 
    padding-top: 70px; 
    overflow-y: auto; 
  }

  .navigation-menu-mobile li {
    margin: 0;
    width: 90%; 
    max-width: 400px; 
    text-align: center;
  }
  .nav-link-mobile { 
    display: block;
    padding: 1rem 1rem; 
    color: #ecf0f1; 
    text-decoration: none;
    font-size: 1.2rem; 
    font-weight: 500;
    border-bottom: 1px solid rgba(255,255,255,0.1); 
    margin-bottom: 0.5rem; 
    border-radius: 4px;
  }
  .navigation-menu-mobile li:last-child .nav-link-mobile { border-bottom: none; }
  .nav-link-mobile:hover, .nav-link-mobile:focus { 
    background-color: rgba(52, 73, 94, 0.8); 
    color: #ffffff; 
  }

  @media (max-width: 767px) {
    .navigation-menu-desktop { display: none; } 
    .menu-toggle { display: block; } 
  }

  .hamburger-icon { width: 24px; height: 18px; position: relative; display: inline-block; }
  .hamburger-icon .line { display: block; position: absolute; height: 3px; width: 100%; background: #fff; border-radius: 3px; opacity: 1; left: 0; transform: rotate(0deg); transition: .25s ease-in-out; }
  .line1 { top: 0px; } .line2 { top: 7px; } .line3 { top: 14px; }
  .menu-toggle[aria-expanded="true"] .line1 { top: 7px; transform: rotate(135deg); }
  .menu-toggle[aria-expanded="true"] .line2 { opacity: 0; left: -24px; }
  .menu-toggle[aria-expanded="true"] .line3 { top: 7px; transform: rotate(-135deg); }
  .sr-only { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); white-space: nowrap; border-width: 0; }
</style>

<script>
  // ... (Tu script para el menú móvil permanece exactamente igual) ...
  const menuToggle = document.querySelector('.menu-toggle');
  const navMenuMobile = document.querySelector('#navigation-menu-mobile'); 

  if (menuToggle && navMenuMobile) {
    menuToggle.addEventListener('click', () => {
      const isExpanded = menuToggle.getAttribute('aria-expanded') === 'true' || false;
      menuToggle.setAttribute('aria-expanded', String(!isExpanded));
      navMenuMobile.classList.toggle('is-open'); 
    });
  }
</script>